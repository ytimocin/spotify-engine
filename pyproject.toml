[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | venv
  | build
  | dist
  | __pycache__
  | \.eggs
  | \.mypy_cache
  | \.pytest_cache
  | notebooks
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
skip = [".venv", "venv", "build", "dist", ".eggs", "notebooks"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true
exclude = [
    "venv",
    ".venv",
    "build",
    "dist",
    "notebooks",
    "__pycache__"
]

[tool.pylint.messages_control]
disable = [
    # Naming conventions
    "C0103",  # Invalid name (we follow PyTorch conventions)
    
    # Documentation (all functions/classes already have docstrings)
    "C0114",  # Missing module docstring
    "C0115",  # Missing class docstring
    "C0116",  # Missing function docstring
    
    # Complexity metrics (ML code naturally has higher complexity)
    "R0801",  # Duplicate code (train.py and train_improved.py share patterns intentionally)
    "R0912",  # Too many branches (data generation requires complex logic)
    "R0913",  # Too many arguments (model needs multiple dimensions)
    "R0914",  # Too many local variables (ML training has many: losses, metrics, etc.)
    "R0915",  # Too many statements (main() orchestrates full pipeline)
    "R0917",  # Too many positional arguments (same as R0913)
    "R1702",  # Too many nested blocks (data processing requires nesting)
    
    # Variable scoping
    "W0621",  # Redefining name from outer scope (common in scripts)
    "W0622",  # Redefining built-in (occasionally needed)
    
    # PyTorch-specific
    "E1101",  # Module has no member (PyTorch uses dynamic attributes)
]

[tool.pylint.format]
max-line-length = 100

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=src --cov-report=html --cov-report=term"